{"version":3,"sources":["webpack:///./src/components/ui/Pagination/Pagination.tsx","webpack:///./src/components/docs/TableOfContents/TocWrapper.tsx","webpack:///./src/components/docs/TableOfContents/TocFloatingButton.tsx","webpack:///./src/templates/page.tsx"],"names":["Wrapper","styled","space","xl","WrapperInner","breakpoints","md","PaginationButton","colors","grey02","grey07","PaginationTitle","Heading","PaginationHeading","Text","PaginationLink","Link","grey03","blue06","blue07","white","PaginationItem","grey01","PaginationBlock","Pagination","prevPage","nextPage","to","slug","width","height","viewBox","id","d","fill","fillRule","transform","xlinkHref","mask","scale","color","display","lineHeight","m","title","TocWrapper","dimensions","heights","header","layerIndexes","overlay","props","isOpen","lg","dialog","grey04","red06","Inner","TocFloatingButton","className","tocIsOpen","onClick","aria-label","undefined","xmlns","PageTemplate","data","React","useState","setTocIsOpen","markdownRemark","sectionList","site","frontmatter","prev","next","getPageById","edges","Page","docsPage","Helmet","siteMetadata","name","content","excerpt","property","DocsWrapper","hasToc","tableOfContents","dangerouslySetInnerHTML","__html","Container","DocsHeader","subtitle","description","MarkdownContent","renderAst","htmlAst","Footer","query"],"mappings":"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","file":"component---src-templates-page-tsx-bd94db326d4614607690.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { TocItem } from 'interfaces/nodes';\nimport { Text, Heading } from 'components/foundations';\nimport { space, breakpoints, colors } from 'components/foundations/variables';\n\nconst Wrapper = styled('aside')`\n  margin-bottom: ${space.xl}px;\n  border-collapse: collapse;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst WrapperInner = styled('div')`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${breakpoints.md}px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nconst PaginationButton = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 4px;\n  background-color: ${colors.grey02};\n\n  svg {\n    g {\n      fill: ${colors.grey07};\n    }\n  }\n\n  &:first-child {\n    margin-top: 16px;\n    margin-right: 24px;\n  }\n\n  &:last-child {\n    margin-top: 16px;\n    margin-left: 24px;\n  }\n`;\n\nconst PaginationTitle = styled(Heading)``;\n\nconst PaginationHeading = styled(Text)``;\n\nconst PaginationLink = styled(Link)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n\n  &:hover {\n    ${PaginationButton} {\n      background-color: ${colors.grey03};\n\n      svg {\n        g {\n          fill: ${colors.grey07};\n        }\n      }\n    }\n\n    ${PaginationTitle} {\n      color: ${colors.blue06};\n    }\n  }\n\n  &:focus {\n    ${PaginationButton} {\n      background-color: ${colors.blue07};\n\n      svg {\n        g {\n          fill: ${colors.white};\n        }\n      }\n    }\n\n    ${PaginationTitle} {\n      color: ${colors.grey07};\n    }\n  }\n`;\n\nconst PaginationItem = styled('div')`\n  display: flex;\n  position: relative;\n  flex: 1 0 auto;\n  align-items: center;\n  height: 96px;\n  padding: 0 ${space.md}px;\n  overflow: hidden;\n  background-color: ${colors.grey01};\n  border-radius: 4px;\n\n  &:first-child {\n    justify-content: flex-start;\n    text-align: left;\n  }\n\n  &:last-child {\n    margin-top: ${space.md}px;\n    justify-content: flex-end;\n    text-align: right;\n  }\n\n  @media (min-width: ${breakpoints.md}px) {\n    flex: 1 0 50%;\n\n    &:not(:first-child) {\n      border-left: none;\n    }\n\n    &:first-child {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n      border-right: none;\n    }\n\n    &:last-child {\n      margin-top: 0;\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n      border-left: none;\n    }\n  }\n`;\n\nconst PaginationBlock = styled('div')``;\n\ninterface PaginationProps {\n  prevPage?: TocItem;\n  nextPage?: TocItem;\n}\n\nconst Pagination: React.SFC<PaginationProps> = ({ prevPage, nextPage }) => (\n  <Wrapper>\n    <WrapperInner>\n      <PaginationItem>\n        {prevPage && (\n          <PaginationLink to={prevPage.slug}>\n            <PaginationButton>\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <defs>\n                  <path\n                    id=\"ic-chevron-left\"\n                    d=\"M.238 8.565l7.329 7.187a.837.837 0 0 0 1.164 0 .795.795 0 0 0 0-1.14L1.984 7.994l6.747-6.617a.796.796 0 0 0 0-1.141.837.837 0 0 0-1.165 0L.237 7.423a.804.804 0 0 0 .001 1.142z\"\n                  />\n                </defs>\n                <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(8 4)\">\n                  <mask id=\"ic-chevron-left-mask\" fill=\"#fff\">\n                    <use xlinkHref=\"#ic-chevron-left\" />\n                  </mask>\n                  <use fill=\"none\" fillRule=\"nonzero\" xlinkHref=\"#ic-chevron-left\" />\n                  <g fill=\"none\" mask=\"url(#ic-chevron-left-mask)\">\n                    <path d=\"M-8-4h24v24H-8z\" />\n                  </g>\n                </g>\n              </svg>\n            </PaginationButton>\n            <PaginationBlock>\n              <PaginationHeading scale={200} color=\"grey04\" display=\"block\">\n                Previous\n              </PaginationHeading>\n              <PaginationTitle scale={400} display=\"inline-block\" lineHeight=\"32px\" m={0}>\n                {prevPage.title}\n              </PaginationTitle>\n            </PaginationBlock>\n          </PaginationLink>\n        )}\n      </PaginationItem>\n\n      <PaginationItem>\n        {nextPage && (\n          <PaginationLink to={nextPage.slug}>\n            <PaginationBlock>\n              <PaginationHeading scale={200} color=\"grey04\" display=\"block\">\n                Next\n              </PaginationHeading>\n              <PaginationTitle scale={400} display=\"inline-block\" lineHeight=\"32px\" m={0}>\n                {nextPage.title}\n              </PaginationTitle>\n            </PaginationBlock>\n            <PaginationButton>\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <defs>\n                  <path\n                    id=\"ic-chevron-right\"\n                    d=\"M8.742 7.423L1.414.236a.837.837 0 0 0-1.165 0 .795.795 0 0 0 0 1.14l6.747 6.618L.25 14.61a.796.796 0 0 0 0 1.141.837.837 0 0 0 1.165 0l7.328-7.187a.803.803 0 0 0 0-1.142z\"\n                  />\n                </defs>\n                <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(8 4)\">\n                  <mask id=\"ic-chevron-right-mask\" fill=\"#fff\">\n                    <use xlinkHref=\"#ic-chevron-right\" />\n                  </mask>\n                  <use fill=\"none\" fillRule=\"nonzero\" xlinkHref=\"#ic-chevron-right\" />\n                  <g fill=\"none\" mask=\"url(#ic-chevron-right-mask)\">\n                    <path d=\"M-8-4h24v24H-8z\" />\n                  </g>\n                </g>\n              </svg>\n            </PaginationButton>\n          </PaginationLink>\n        )}\n      </PaginationItem>\n    </WrapperInner>\n  </Wrapper>\n);\n\nexport default Pagination;\n","import styled from 'styled-components';\nimport { dimensions, breakpoints, colors, layerIndexes } from 'components/foundations/variables';\n\ninterface ToggleableProps {\n  isOpen?: boolean;\n}\n\nconst TocWrapper = styled('section')<ToggleableProps>`\n  display: block;\n  margin-left: 24px;\n  font-size: 13px;\n  line-height: 28px;\n\n  @media (min-width: ${breakpoints.xl}px) {\n    flex: 0 0 240px;\n    position: sticky;\n    top: ${dimensions.heights.header + 32}px;\n    max-height: calc(100vh - ${dimensions.heights.header + 32}px);\n    overflow-y: auto;\n  }\n\n  @media (max-width: ${breakpoints.xl - 1}px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    margin-left: 0;\n    margin-top: ${dimensions.heights.header}px;\n    padding: 24px;\n    background-color: ${colors.white};\n    z-index: ${layerIndexes.overlay - 5};\n    visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n    opacity: ${props => (props.isOpen ? 1 : 0)};\n    transform: ${props => (props.isOpen ? 'translateY(0)' : 'translateY(64px)')};\n    transition: visibility 0.3s ease, opacity 0.3s ease, transform 0.3s ease;\n    overflow-y: auto;\n  }\n\n  @media (min-width: ${breakpoints.lg}px) and (max-width: ${breakpoints.xl - 1}px) {\n    margin-top: 0;\n    z-index: ${layerIndexes.dialog + 1};\n  }\n\n  ul {\n    padding-left: 16px;\n    border-left: 1px solid ${colors.grey02};\n    list-style-type: none;\n\n    p {\n      margin: 0;\n    }\n\n    ul {\n      border-left: none;\n    }\n  }\n\n  a {\n    color: ${colors.grey04};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      color: ${colors.grey07};\n    }\n  }\n`;\n\nexport default TocWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors, layerIndexes, breakpoints } from 'components/foundations/variables';\n\ninterface ToggleableProps {\n  isOpen?: boolean;\n}\n\nconst Wrapper = styled('button')<ToggleableProps>`\n  display: inline-block;\n  position: fixed;\n  bottom: 24px;\n  right: 24px;\n  padding: 0;\n  background-color: ${props => (props.isOpen ? colors.red06 : colors.blue06)};\n  color: ${colors.white};\n  cursor: pointer;\n  z-index: ${layerIndexes.overlay - 1};\n  border-radius: 50%;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 2px 4px 1px rgba(0, 0, 0, 0.15);\n\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n\n  @media (min-width: ${breakpoints.lg}px) and (max-width: ${breakpoints.xl - 1}px) {\n    z-index: ${layerIndexes.dialog + 2};\n  }\n\n  @media (min-width: ${breakpoints.xl}px) {\n    display: none;\n  }\n`;\n\nconst Inner = styled('div')<ToggleableProps>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n\n  &.is-open {\n    & svg {\n      transform: rotate(180deg);\n    }\n  }\n`;\n\ninterface TocFloatingButtonProps {\n  className?: string;\n  tocIsOpen?: boolean;\n  onClick?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst TocFloatingButton: React.SFC<TocFloatingButtonProps> = ({ className, tocIsOpen, onClick }) => (\n  <Wrapper className={className} onClick={onClick} isOpen={tocIsOpen} aria-label=\"Toggle Table of Contents\">\n    <Inner isOpen={tocIsOpen} className={tocIsOpen ? 'is-open' : undefined}>\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M4.71 16.71L12 9.41L19.29 16.71C19.383 16.8037 19.4936 16.8781 19.6154 16.9289C19.7373 16.9797 19.868 17.0058 20 17.0058C20.132 17.0058 20.2627 16.9797 20.3846 16.9289C20.5064 16.8781 20.617 16.8037 20.71 16.71C20.8037 16.617 20.8781 16.5064 20.9289 16.3846C20.9797 16.2627 21.0058 16.132 21.0058 16C21.0058 15.868 20.9797 15.7373 20.9289 15.6154C20.8781 15.4936 20.8037 15.383 20.71 15.29L12.71 7.29C12.617 7.19627 12.5064 7.12188 12.3846 7.07111C12.2627 7.02034 12.132 6.9942 12 6.9942C11.868 6.9942 11.7373 7.02034 11.6154 7.07111C11.4936 7.12188 11.383 7.19627 11.29 7.29L3.29 15.29C3.1017 15.4783 2.99591 15.7337 2.99591 16C2.99591 16.2663 3.1017 16.5217 3.29 16.71C3.47831 16.8983 3.7337 17.0041 4 17.0041C4.2663 17.0041 4.5217 16.8983 4.71 16.71Z\"\n          fill={colors.white}\n        />\n      </svg>\n    </Inner>\n  </Wrapper>\n);\n\nexport default TocFloatingButton;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { RouteComponentProps } from '@reach/router';\n\nimport { getPageById } from 'utils/helpers';\nimport { MenuNode, Edge } from 'interfaces/nodes';\nimport { SiteMetadata } from 'interfaces/gatsby';\n\nimport { Page } from 'components/layout/Page';\nimport { Container } from 'components/layout/Container';\nimport { DocsWrapper } from 'components/docs/DocsWrapper';\nimport { DocsHeader } from 'components/docs/DocsHeader';\nimport { MarkdownContent } from 'components/page/Markdown';\n\nimport { FooterWrapper, Footer } from 'components/layout/Footer';\nimport { Pagination } from 'components/ui/Pagination';\nimport { TocWrapper, TocFloatingButton } from 'components/docs/TableOfContents';\nimport IndexLayout from 'layouts';\nimport renderAst from 'utils/renderAst';\n\ninterface PageTemplateProps extends RouteComponentProps {\n  data: {\n    site: {\n      siteMetadata: SiteMetadata;\n    };\n    sectionList: {\n      edges: Edge<MenuNode>[];\n    };\n    markdownRemark: {\n      htmlAst: any;\n      tableOfContents: string;\n      excerpt: string;\n      frontmatter: {\n        id: string;\n        title: string;\n        description?: string;\n        prev?: string;\n        next?: string;\n      };\n    };\n  };\n}\n\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => {\n  const [tocIsOpen, setTocIsOpen] = React.useState(false);\n  const { markdownRemark, sectionList, site } = data;\n  const { prev, next } = markdownRemark.frontmatter;\n  const prevPage = getPageById(sectionList.edges, prev);\n  const nextPage = getPageById(sectionList.edges, next);\n\n  return (\n    <IndexLayout>\n      <Page docsPage>\n        <Helmet>\n          <title>\n            {markdownRemark.frontmatter.title} &middot; {site.siteMetadata.title}\n          </title>\n          <meta name=\"description\" content={markdownRemark.excerpt} />\n          <meta property=\"og:title\" content={markdownRemark.frontmatter.title} />\n          <meta property=\"og:description\" content={markdownRemark.excerpt} />\n        </Helmet>\n        <DocsWrapper hasToc={!!markdownRemark.tableOfContents}>\n          {markdownRemark.tableOfContents && (\n            <TocWrapper\n              isOpen={tocIsOpen}\n              onClick={() => setTocIsOpen(!tocIsOpen)}\n              dangerouslySetInnerHTML={{ __html: markdownRemark.tableOfContents }}\n            />\n          )}\n          <Container>\n            <DocsHeader title={markdownRemark.frontmatter.title} subtitle={markdownRemark.frontmatter.description} />\n            <MarkdownContent>{renderAst(markdownRemark.htmlAst)}</MarkdownContent>\n            <FooterWrapper>\n              {(prevPage || nextPage) && <Pagination prevPage={prevPage} nextPage={nextPage} />}\n              <Footer />\n            </FooterWrapper>\n          </Container>\n          <TocFloatingButton tocIsOpen={tocIsOpen} onClick={() => setTocIsOpen(!tocIsOpen)} />\n        </DocsWrapper>\n      </Page>\n    </IndexLayout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n        keywords\n        author {\n          name\n          url\n          email\n        }\n      }\n    }\n    sectionList: allTocJson {\n      edges {\n        node {\n          title\n          items {\n            id\n            slug\n            title\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      tableOfContents\n      excerpt\n      frontmatter {\n        id\n        title\n        prev\n        next\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}